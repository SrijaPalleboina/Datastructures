#include<stdio.h>
#include<stdlib.h>
typedef struct node 
{
    int data;
    struct node *next;
}node;
node *head =NULL;
node *temp=NULL;
node *getnode();
void insert_beg();
void display();
void del_beg();
void del_end();
void del_atpos();
void insert_beg();
void insert_end();
void insert_pos();
int length();
void main()
{
    int a;
    while(1)
    {
        printf("enter your option : ");
        scanf("%d",&a);
        switch(a)
        {
            case 1: printf("deletion at begging: ");
                      del_beg();
                      break;
            case 2: printf("deletion at the end : ");
                     del_end();
                      break;
            case 3: printf("deletion at the k position : ");
                     del_atpos();
                     break;
            case 4: printf("the elmets in the node are : ");
                     display();
                     break;
	    case 5 : printf("insertion at beginnig: ");
	            insert_beg();
	             break;
	    case 6: printf("insertion at end ");
                     insert_end();
                     break;
            case 7: printf("insertion at position:");
                     insert_pos();
                     break;
            case 8: if(head==NULL)
                    printf("the list is empty:");
                    else if(head->next==NULL)
	            printf("the list has one node:");
                    else
	            length();
                    break;		    
            case 9: exit(0);
                     break;
        }
    }
}
void del_beg()   
{
        node *temp1 = head;
        if(head==NULL)
        printf("list is  empty : ");
        else if(head->next ==  NULL)
	    {
        printf("data deleeted is %d",head->data);
        head = NULL;
        temp = NULL;
        free(temp);
        }
        else
	    {
            head = head->next;
            free(temp1);
        }
}
void del_atpos()
{
	     int k,i,n;
	      node *curr=head,*temp1;
	     printf("enter the position :");
	     scanf("%d",&k);
	     n=length();
	     if(k==1)
		    del_beg();
	     if(k==n)
		     del_end();
	     else if(1<k&&k<n)
	     {
		     for(i=1;i<k-1;i++)
			     curr = curr->next;
	             temp1 = curr->next;
		         curr->next= curr->next->next;
		         free(temp1);
	     }
          else
	         printf("\n invalid position ");
}

void insert_beg()
{
    node *new = getnode();
    new->next = head;
    head=new;
}
node *getnode()
{
    node *new = (node*)malloc(sizeof(node));
    printf("enter data : ");
    scanf("%d",&new->data);
    new->next= NULL;
    return new;
} 
void insert_end()
{
    node *new= getnode();
    node *temp=head;
    if(head==NULL)
    temp = head = new;
    while(temp->next!=NULL)
    {
        temp= temp->next;
    }
    temp->next=new;
    new->next =NULL;
}
void display()
{
    node *curr = head;
    while(curr!=NULL)
    {
        printf("%d ",curr->data);
        curr = curr->next;
    }
}
int length()
{
    
    int count = 0;
    temp = head;
    while(temp!=0)
    {
        count++;
        temp = temp->next;
    } 
    printf("%d",count);
    return count;
}
void insert_pos()
{    
    int i,k,n;
    n=length();
    printf("enter our position");
    scanf("%d",&k);
    node *new = getnode();
    temp=head;
    if(k==1)
    insert_beg();
    if(k==n)
    insert_end();
    else if(1<k&&k<n)
    for(i=1;i<k-1;i++)
    {
        temp= temp->next; 
    }
        new->next = temp->next;
        temp->next = new;
    
}
void del_end()
{ 
    node *temp1=head;
    if(head==NULL)
    printf("\nList is empty\n");
    else if(head->next = NULL)
    {
        printf("\nData delete %d",head->data);
        head=NULL;
        temp=NULL;
        free(temp1);
    }
    else
    {
        node *t;
        while(temp1->next!=temp)
        {
            temp1=temp1->next;
        }
            t=temp1->next;
            temp1->next=NULL;
            temp=temp1;
            free(t);
        
    }
    
}



